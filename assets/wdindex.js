javascript: (function wdScraper() { var employeeName = 'Sajad Mohamad-Habeeb'; var employeeEmailAddress = 'smohamadhabeeb@salesforce.com'; var employeeCalId = 'c_kpag5dgh2artn35aigi8a8vv10@group.calendar.google.com'; var unformattedTitle = document.querySelector("[data-automation-id='workerProfileDetailsPanelName']")?.innerText; var candidateTitle = unformattedTitle.slice(0, unformattedTitle.lastIndexOf("(")); var unformattedSubtitle = document.querySelector("[data-automation-id='workerProfileDetailsPanelSubtitleContainer']")?.innerText; var sliceUnformattedSubtitle = unformattedSubtitle.slice(5); var candidateSubtitle = sliceUnformattedSubtitle.split(/^\S+\s+(.*)/).join(''); var joinedTitles = candidateTitle + '- ' + candidateSubtitle; var candidateSource = document.getElementById("56$581439")?.innerText; var unformattedManager = document.getElementById("56$307577")?.innerText || ""; var hiringManagerName = unformattedManager.slice(0, unformattedManager.lastIndexOf(" (")); var unformattedRecruiter = document.getElementById("56$307582")?.innerText || ""; var recruiterName = unformattedRecruiter.slice(0, unformattedRecruiter.lastIndexOf(" (")); var unformattedPhone = document.querySelectorAll("[data-automation-id='profileHeaderItem']")[0]?.innerText; var sliceUnformattedPhone = unformattedPhone.replace("Jobs Applied to", ""); var candidatePhone = sliceUnformattedPhone?.slice(13, sliceUnformattedPhone.lastIndexOf(" (")) || ""; unformattedEmail = document.querySelectorAll("[data-automation-id='profileHeaderItem']")[1]?.innerText || ""; candidateEmail = unformattedEmail?.slice(6) || ""; tab = String.fromCodePoint(9); hiringTeamPhoneLocation = 'Please call the candidate at ' + String(candidatePhone); hiringTeamPhoneDescription = '<strong>RC: </strong>Please email ' + String(employeeName) + ' at ' + String(employeeEmailAddress) + ' for all scheduling updates<br /><strong>Hiring Manager: </strong>' + String(hiringManagerName) + '<br /><strong>Recruiter: </strong>' + String(recruiterName) + '<br /><a href=\"\">Job Description</a><br /><br /><strong>Interview Feedback Form </strong><em>Link will be added once interview is fully accepted.</em><br /><br /><strong>Candidate Info:<br /></strong>Source: ' + String(candidateSource) + '<br />Phone Number: ' + String(candidatePhone) + '<br />Email Address: ' + String(candidateEmail) + '<br /><br /><strong>Additional Resources:</strong> <ul> <li><a href=\"https://ohana.salesforce.com/hiring/fill-role\">Hiring Resource Site</a></li> </ul> <em>Recording interviews is against compliance and not permitted at this time.</em>'; var hiringTeamPhoneUrl = 'https://calendar.google.com/calendar/u/0/r/eventedit?src=' + String(employeeCalId) + '&text=Phone Interview - ' +String(joinedTitles)+ '&details=' +String(hiringTeamPhoneDescription)+ '&location=' +String(hiringTeamPhoneLocation)+ '&crm=BUSY&sf=true'; hiringTeamGoogleMeetLocation = 'Please join through the Google Meet link'; hiringTeamGoogleMeetDescription = 'This is a Google Meet interview â€” please join through the link. <strong>If you experience difficulties, please call the candidate at ' + String(candidatePhone) + '.</strong><br /><br /><strong>RC:</strong> Please email ' + String(employeeName) + ' at ' + String(employeeEmailAddress) + ' for all scheduling updates<br /><strong>Hiring Manager: </strong>' + String(hiringManagerName) + '<br /><strong>Recruiter: </strong>' + String(recruiterName) + '<br /><a href=\"\">Job Description</a><br /><br /><strong>Interview Feedback Form </strong><em>Link will be added once interview is fully accepted.</em><br /><br /><strong>Candidate Info:<br /></strong>Source: ' + String(candidateSource) + '<br />Phone Number: ' + String(candidatePhone) + '<br />Email Address: ' + String(candidateEmail) + '<br /><br /><strong>Important Note: </strong><i><strong>Prior to interviewing,</strong> <a href="https://ohana.salesforce.com/hiring/interviewer-certification">interview certification</a> is now required for all <strong>Distribution interviewers</strong> (ICs and PLs). All other orgs will have this requirement starting November 1. Please reach out to your recruiter with questions.</i><br /><br /><strong>Additional Resources:</strong><ul><li><a href="https://ohana.salesforce.com/blog/cat_career-growth/pd_2020-03-10/virtual-interview-playbook"><strong>Virtual Interview Playbook</strong></a></li><li><a href="https://bit.ly/2CV9ztP">SIFT competencies and questions</a> (if applicable)</li><li><a href="https://ohana.salesforce.com/hiring/fill-role">Hiring Resource Site</a></li><li><a href="https://docs.google.com/document/d/1T4l2dKD1XTtjDVI7i7_wXMvEyarA-qYPxz5s6x_xqUQ">Google Meet Guide</a></li></ul><em>Recording interviews is against compliance and not permitted at this time.</em>'; var hiringTeamGoogleMeetUrl = 'https://calendar.google.com/calendar/u/0/r/eventedit?src=' + String(employeeCalId) + '&text=Google Meet Interview - ' +String(joinedTitles)+ '&details=' +String(hiringTeamGoogleMeetDescription)+ '&location=' +String(hiringTeamGoogleMeetLocation)+ '&crm=BUSY&sf=true'; candidateGoogleMeetLocation = 'Your interviewer(s) will join you through the Google Meet link'; candidateDescription = '<strong>RC:</strong> Please email ' + String(employeeName) + ' at ' + String(employeeEmailAddress) + ' for all scheduling updates<br /><strong>Hiring Manager: </strong>' + String(hiringManagerName) + '<br /><strong>Recruiter: </strong>' + String(recruiterName) + '<br /><strong>Interviewer(s): </strong><i>Full details will be added once confirmed with the hiring team</i><br /><br /><strong>Note: </strong>The hiring team has received a separate interview invite with matching details. Once they have accepted the date and time of your interview(s), I will list your interviewer(s) and email you directly to confirm that we are all set!'; var candidateGoogleMeetUrl = 'https://calendar.google.com/calendar/u/0/r/eventedit?src=' + String(employeeCalId) + '&text=Google Meet Interview - ' +String(joinedTitles)+ '&details=' +String(candidateDescription)+ '&location=' +String(candidateGoogleMeetLocation)+ '&crm=BUSY&sf=true'; candidatePhoneLocation = 'Your interviewer will call you at ' + String(candidatePhone); var candidatePhoneUrl = 'https://calendar.google.com/calendar/u/0/r/eventedit?src=' + String(employeeCalId) + '&text=Phone Interview - ' +String(joinedTitles)+ '&details=' +String(candidateDescription)+ '&location=' +String(candidatePhoneLocation)+ '&crm=BUSY&sf=true'; function injectContainer() { var containerDivStyle = 'z-index: 9999999; position: fixed; display: flex; flex-direction: row; flex-wrap: nowrap; justify-content: space-between; align-items: flex-start; align-content: stretch; top: 10px; right: 50%; margin-right: -250px; font-family: Roboto, san-serif, arial;'; var innerContainerDivStyle = 'display: flex; flex-direction: column; flex-wrap: nowrap; justify-content: space-between; align-items: stretch; align-content: stretch; padding: 6px; margin-right: 5px; background-color: #FFFFFF; border-radius: 8px; border: 1px #EEEEEE solid; box-shadow: 0px 4px 8px rgb(10 22 70 / 15%);'; var templateButtonDivStyle = 'margin: 3px 0px; padding: 6px 10px; width: auto; text-align: center; font-size: 10px; font-weight: bold; background-color: #009EDB; color: #FFFFFF; border: 2px #009EDB solid; border-radius: 50px; cursor: pointer; box-shadow: 0px 4px 8px rgb(10 22 70 / 15%);'; function templateButtonMouseoverStyle() { item.setAttribute("style", "background-color: #FFFFFF; color: #009EDB;") } function templateButtonMouseoutStyle() { item.setAttribute("style", "background-color: #009EDB; color: #FFFFFF;") } var body = document.getElementsByTagName("body")[0]; var containerDiv = document.createElement("div"); containerDiv.id = "containerDiv"; containerDiv.style.cssText = containerDivStyle; body.appendChild(containerDiv); var hiringTeamInnerContainerDiv = document.createElement("div"); hiringTeamInnerContainerDiv.id = "hiringTeamInnerContainerDiv"; hiringTeamInnerContainerDiv.style.cssText = innerContainerDivStyle; containerDiv.appendChild(hiringTeamInnerContainerDiv); var hiringTeamGoogleMeet = document.createElement("div"); hiringTeamGoogleMeet.id = "hiringTeamGoogleMeet"; hiringTeamGoogleMeet.style.cssText = templateButtonDivStyle; hiringTeamGoogleMeet.innerHTML = "Hiring Team Google Meet Invite"; hiringTeamGoogleMeet.addEventListener("click", function() { window.open(hiringTeamGoogleMeetUrl); }); hiringTeamGoogleMeet.addEventListener("mouseover", templateButtonMouseoverStyle, false); hiringTeamGoogleMeet.addEventListener("mouseout", templateButtonMouseoutStyle, false); hiringTeamInnerContainerDiv.appendChild(hiringTeamGoogleMeet); var hiringTeamPhone = document.createElement("div"); hiringTeamPhone.id = "hiringTeamPhone"; hiringTeamPhone.style.cssText = templateButtonDivStyle; hiringTeamPhone.innerHTML = "Hiring Team Phone Invite"; hiringTeamPhone.addEventListener("click", function() { window.open(hiringTeamPhoneUrl); }); hiringTeamInnerContainerDiv.appendChild(hiringTeamPhone); var CandidateInnerContainerDiv = document.createElement("div"); CandidateInnerContainerDiv.id = "CandidateInnerContainerDiv"; CandidateInnerContainerDiv.style.cssText = innerContainerDivStyle; containerDiv.appendChild(CandidateInnerContainerDiv); var CandidateGoogleMeet = document.createElement("div"); CandidateGoogleMeet.id = "CandidateGoogleMeet"; CandidateGoogleMeet.style.cssText = templateButtonDivStyle; CandidateGoogleMeet.innerHTML = "Internal Candidate Google Meet Invite"; CandidateGoogleMeet.addEventListener("click", function() { window.open(candidateGoogleMeetUrl); alert('Please ensure that the Google Meet links match for both the hiring team and the internal candidate.') }); CandidateInnerContainerDiv.appendChild(CandidateGoogleMeet); var CandidatePhone = document.createElement("div"); CandidatePhone.id = "CandidatePhone"; CandidatePhone.style.cssText = templateButtonDivStyle; CandidatePhone.innerHTML = "Internal Candidate Phone Invite"; CandidatePhone.addEventListener("click", function() { window.open(candidatePhoneUrl); }); CandidateInnerContainerDiv.appendChild(CandidatePhone); window.setTimeout(function() { containerDiv.remove(); }, 60000); } if (document.hasFocus()) { return injectContainer(); } })();
